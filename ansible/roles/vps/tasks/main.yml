---
# tasks file for vps
- name: Install podman
  tags:
    - podman
  ansible.builtin.package:
    name: podman

# While the following bug from the podman module is not solved, I can't
# mount volumes with SELinux in Enforcing mode.
# https://github.com/containers/ansible-podman-collections/issues/102
- name: Put SELinux in permissive mode, logging actions that would be blocked.
  tags:
    - selinux
  ansible.posix.selinux:
    policy: targeted
    state: permissive

- name: Create http front podman network
  tags:
    - podman
  containers.podman.podman_network:
    name: http_front
    internal: true
    ip_range: 10.13.38.0/25
    subnet: 10.13.38.0/24
    gateway: 10.13.38.1

- name: Create podman base volumes directory
  tags:
    - podman
  ansible.builtin.file:
    path: "{{ container_volumes_base_dir }}"
    state: directory
    mode: 0755
    owner: root
    group: root
    force: true

- name: Create podman volumes directories
  tags:
    - podman
  ansible.builtin.file:
    path: "{{ container_volumes_base_dir }}/{{ item.0.name }}/{{ item.1 }}"
    state: directory
    mode: 0755
    owner: root
    group: root
    force: true
  loop: "{{ containers | product(volume_directory) | list }}"

- name: Sync configurations
  tags:
    - config
  ansible.posix.synchronize:
    src: "templates/{{ item.name }}/"
    dest: "{{ container_volumes_base_dir }}/{{ item.name }}/conf/"
    delete: true
    recursive: true
    links: true
    rsync_opts:
      - "--exclude=*~"
  loop: "{{ containers }}"

- name: Run containers list
  tags:
    - podman
  containers.podman.podman_container:
    name: "{{ item.name }}"
    image: "{{ item.image }}"
    state: started
    ip: "{{ item.ip }}"
    recreate: "{{ item.recreate }}"
    # subuidname: nils
    # subgidname: nils
    ports: "{{ item.ports | default([\"\"]) }}"
    volume: "{{ item.volume }}"
    generate_systemd:
      path: /etc/systemd/system/
      restart_policy: always
      names: true
      container_prefix: container
      # notify: start nginx_site1
  loop: "{{ containers }}"

- name: Enable container services
  tags:
    - podman
    - systemd
  ansible.builtin.systemd:
    name: "container-{{ item.name }}"
    daemon_reload: true
    enabled: true
  loop: "{{ containers }}"
